@page "/petstore"
@using System.Net.Http.Json
@using System.Net.Http
@using System.Text.Json.Serialization
@using System.Collections.Generic
@using System.Net.Http.Headers;

<h1>Petstore API</h1>

<div>
    <label for="status">Status:</label>
    <input id="status" @bind="selectedStatus" />
    <button @onclick="GetPets">Get Pets</button>
</div>

@if (isLoading)
{
    <p>Loading...</p>
}
else if (errorMessage != null)
{
    <p>@errorMessage</p>
}
else if (pets != null)
{
    <table class="table">
        <thead>
            <tr>
                <th>Id</th>
                <th>Name</th>
                <th>Photo Urls</th>
            </tr>
        </thead>
        <tbody>
            @foreach (var pet in pets)
            {
                <tr>
                    <td>@pet.Id</td>
                    <td>@pet.Name</td>
                    <td>
                        @foreach (var photoUrl in pet.PhotoUrls)
                        {
                            <div>@photoUrl</div>
                        }
                    </td>
                </tr>
            }
        </tbody>
    </table>
}



@code {
    private bool isLoading = false;
    private string errorMessage;
    private List<Pet> pets;
    private string selectedStatus = "available";

    private async Task GetPets()
    {
        isLoading = true;
        try
        {
            var httpClient = new HttpClient();
            httpClient.DefaultRequestHeaders.Accept.Add(new MediaTypeWithQualityHeaderValue("application/json"));
            pets = await httpClient.GetFromJsonAsync<List<Pet>>($"https://petstore.swagger.io/v2/pet/findByStatus?status={selectedStatus}");
        }
        catch (Exception ex)
        {
            errorMessage = ex.Message;
        }
        finally
        {
            isLoading = false;
        }
    }

    private class Pet
    {
        public long Id { get; set; }
        public Category Category { get; set; }
        public string Name { get; set; }
        public List<string> PhotoUrls { get; set; }
        public List<Tag> Tags { get; set; }
        public string Status { get; set; }
    }

    private class Category
    {
        public long Id { get; set; }
        public string Name { get; set; }
    }

    private class Tag
    {
        public long Id { get; set; }
        public string Name { get; set; }
    }
}