
x-common-variables: &common-variables
  ASPNETCORE_ENVIRONMENT: Development
  OTEL_EXPORTER_OTLP_ENDPOINT: 'http://otel-collector:4317'

services:

## ----------------- Apps
  frontend:
    image: ${DOCKER_REGISTRY-}dinner-frontend
    build:
      context: src\frontend
    ports:
      - 5011:80
    environment:
      <<: *common-variables
    depends_on:
      otel-collector:
        condition: service_started
  frontend-dapr:
    image: daprio/daprd:1.10.6
    command: ["./daprd",
     "-app-id", "frontend",
     "-app-port", "80",
     "-resources-path", "./components",
     "-config", "./components/config.yaml"]   
    volumes:
      - "./dapr/docker/:/components"
    depends_on:
      frontend:
        condition: service_started
    network_mode: "service:frontend"

  dinner-api:
    image: ${DOCKER_REGISTRY-}dinner-api
    build:
      context: src\dinner-api
    ports:
      - 5010:80
    environment:
      <<: *common-variables
    depends_on:
      otel-collector:
        condition: service_started
  dinner-api-dapr:
    image: daprio/daprd:1.10.6
    command: ["./daprd",
     "-app-id", "dinner-api",
     "-app-port", "80",
     "-resources-path", "./components",
     "-config", "./components/config.yaml"]   
    volumes:
      - "./dapr/docker/:/components"
    depends_on:
      dinner-api:
        condition: service_started
    network_mode: "service:dinner-api"

  processor:
    image: ${DOCKER_REGISTRY-}processor
    build:
      context: src\ai-processor
    environment:
      <<: *common-variables
      AZURE_OPENAI_API_MODEL: ${AZURE_OPENAI_API_MODEL}
      AZURE_OPENAI_API_ENDPOINT: ${AZURE_OPENAI_API_ENDPOINT}
      AZURE_OPENAI_API_KEY: ${AZURE_OPENAI_API_KEY}
    depends_on:
      otel-collector:
        condition: service_started
  processor-dapr:
    image: daprio/daprd:1.10.6
    command: ["./daprd",
     "-app-id", "ai-processor",
     "-app-port", "80",
     "-resources-path", "./components",
     "-config", "./components/config.yaml"]   
    volumes:
      - "./dapr/docker/:/components"
    depends_on:
      processor:
        condition: service_started
    network_mode: "service:processor"

  email-sender:
    image: ${DOCKER_REGISTRY-}email-sender
    build:
      context: src\email-sender
    environment:
      <<: *common-variables
      AZURE_COMMUNICATION_ENDPOINT: ${AZURE_COMMUNICATION_ENDPOINT}
      AZURE_COMMUNICATION_FROM_ADDRESS: ${AZURE_COMMUNICATION_FROM_ADDRESS}
    depends_on:
      otel-collector:
        condition: service_started
  email-sender-dapr:
    image: daprio/daprd:1.10.6
    command: ["./daprd",
     "-app-id", "email-sender",
     "-app-port", "80",
     "-resources-path", "./components",
     "-config", "./components/config.yaml"]   
    volumes:
      - "./dapr/docker/:/components"
    depends_on:
      email-sender:
        condition: service_started
    network_mode: "service:email-sender"

## ----------------- Infra
  redis:
    image: redis:latest
    ports:
      - 6380:6379

  mongo:
    image: mongo:6.0.6
    ports:
      - 27017:27017

  zipkin:
    image: openzipkin/zipkin:latest
    ports:
      - 9412:9411
    environment:
      JAVA_OPTS: '-Xms1g -Xmx1g -XX:+ExitOnOutOfMemoryError'

  otel-collector:
    image: otel/opentelemetry-collector-contrib:0.75.0
    command: ["--config=conf/config.yaml"]
    environment:
      - APPLICATION_INSIGHTS_INSTRUMENTATION_KEY=${APPLICATION_INSIGHTS_INSTRUMENTATION_KEY}
    volumes:
      - ./docker/otel-collector-config.yaml:/conf/config.yaml
    depends_on:
      zipkin:
        condition: service_started

  seq:
    image: datalust/seq:latest
    ports:
      - 5341:80
    environment:
      - ACCEPT_EULA=Y
